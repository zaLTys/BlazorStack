@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

Please log in below or <a href="register">register</a>.

<EditForm Model="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
    </div>
        <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
    </div>
    <p></p>
    <button type="submit" class="btn btn-primary">Login</button>
    <ValidationSummary></ValidationSummary>
</EditForm>


@code {
    private UserLoginModel user = new UserLoginModel();

    private async void HandleLogin()
    {
        await LocalStorage.SetItemAsync<bool>("isAuthenticated", true); //later this will be a Token
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
}
